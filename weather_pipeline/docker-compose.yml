version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: weather_db
    restart: always
    environment:
      POSTGRES_DB: weather_db
      POSTGRES_USER: weather_user
      POSTGRES_PASSWORD: weather_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-webserver:
    image: apache/airflow:2.9.1-python3.10
    container_name: airflow_web
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://weather_user:weather_pass@postgres/weather_db
      AIRFLOW__CORE__FERNET_KEY: msaVa7V76zg9xhotplAMGacjr_sY-uERYmNd83EEuqg=
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
    ports:
      - "8090:8080"
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Air --lastname Flow --role Admin --email admin@example.com &&
        exec airflow webserver
      "

  airflow-scheduler:
    image: apache/airflow:2.9.1-python3.10
    container_name: airflow_scheduler
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://weather_user:weather_pass@postgres/weather_db
      AIRFLOW__CORE__FERNET_KEY: msaVa7V76zg9xhotplAMGacjr_sY-uERYmNd83EEuqg=
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
    command: >
      bash -c "exec airflow scheduler"

  app:
    build: .
    container_name: weather_etl
    depends_on:
      - postgres
    volumes:
      - .:/app
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}

volumes:
  postgres_data:
